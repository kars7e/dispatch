///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package serviceaccount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetServiceAccountReader is a Reader for the GetServiceAccount structure.
type GetServiceAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetServiceAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetServiceAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetServiceAccountUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetServiceAccountForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetServiceAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetServiceAccountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetServiceAccountOK creates a GetServiceAccountOK with default headers values
func NewGetServiceAccountOK() *GetServiceAccountOK {
	return &GetServiceAccountOK{}
}

/*GetServiceAccountOK handles this case with default header values.

Successful operation
*/
type GetServiceAccountOK struct {
	Payload *v1.ServiceAccount
}

func (o *GetServiceAccountOK) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccountOK  %+v", 200, o.Payload)
}

func (o *GetServiceAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.ServiceAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountBadRequest creates a GetServiceAccountBadRequest with default headers values
func NewGetServiceAccountBadRequest() *GetServiceAccountBadRequest {
	return &GetServiceAccountBadRequest{}
}

/*GetServiceAccountBadRequest handles this case with default header values.

Invalid Name supplied
*/
type GetServiceAccountBadRequest struct {
	Payload *v1.Error
}

func (o *GetServiceAccountBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccountBadRequest  %+v", 400, o.Payload)
}

func (o *GetServiceAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountUnauthorized creates a GetServiceAccountUnauthorized with default headers values
func NewGetServiceAccountUnauthorized() *GetServiceAccountUnauthorized {
	return &GetServiceAccountUnauthorized{}
}

/*GetServiceAccountUnauthorized handles this case with default header values.

Unauthorized Request
*/
type GetServiceAccountUnauthorized struct {
	Payload *v1.Error
}

func (o *GetServiceAccountUnauthorized) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccountUnauthorized  %+v", 401, o.Payload)
}

func (o *GetServiceAccountUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountForbidden creates a GetServiceAccountForbidden with default headers values
func NewGetServiceAccountForbidden() *GetServiceAccountForbidden {
	return &GetServiceAccountForbidden{}
}

/*GetServiceAccountForbidden handles this case with default header values.

access to this resource is forbidden
*/
type GetServiceAccountForbidden struct {
	Payload *v1.Error
}

func (o *GetServiceAccountForbidden) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccountForbidden  %+v", 403, o.Payload)
}

func (o *GetServiceAccountForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountNotFound creates a GetServiceAccountNotFound with default headers values
func NewGetServiceAccountNotFound() *GetServiceAccountNotFound {
	return &GetServiceAccountNotFound{}
}

/*GetServiceAccountNotFound handles this case with default header values.

Service Account not found
*/
type GetServiceAccountNotFound struct {
	Payload *v1.Error
}

func (o *GetServiceAccountNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccountNotFound  %+v", 404, o.Payload)
}

func (o *GetServiceAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceAccountDefault creates a GetServiceAccountDefault with default headers values
func NewGetServiceAccountDefault(code int) *GetServiceAccountDefault {
	return &GetServiceAccountDefault{
		_statusCode: code,
	}
}

/*GetServiceAccountDefault handles this case with default header values.

Unknown error
*/
type GetServiceAccountDefault struct {
	_statusCode int

	Payload *v1.Error
}

// Code gets the status code for the get service account default response
func (o *GetServiceAccountDefault) Code() int {
	return o._statusCode
}

func (o *GetServiceAccountDefault) Error() string {
	return fmt.Sprintf("[GET /v1/iam/serviceaccount/{serviceAccountName}][%d] getServiceAccount default  %+v", o._statusCode, o.Payload)
}

func (o *GetServiceAccountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(v1.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
