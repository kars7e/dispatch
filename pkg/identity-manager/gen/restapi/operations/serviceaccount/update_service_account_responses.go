///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package serviceaccount

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// UpdateServiceAccountOKCode is the HTTP code returned for type UpdateServiceAccountOK
const UpdateServiceAccountOKCode int = 200

/*UpdateServiceAccountOK Successful update

swagger:response updateServiceAccountOK
*/
type UpdateServiceAccountOK struct {

	/*
	  In: Body
	*/
	Payload *v1.ServiceAccount `json:"body,omitempty"`
}

// NewUpdateServiceAccountOK creates UpdateServiceAccountOK with default headers values
func NewUpdateServiceAccountOK() *UpdateServiceAccountOK {

	return &UpdateServiceAccountOK{}
}

// WithPayload adds the payload to the update service account o k response
func (o *UpdateServiceAccountOK) WithPayload(payload *v1.ServiceAccount) *UpdateServiceAccountOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account o k response
func (o *UpdateServiceAccountOK) SetPayload(payload *v1.ServiceAccount) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceAccountBadRequestCode is the HTTP code returned for type UpdateServiceAccountBadRequest
const UpdateServiceAccountBadRequestCode int = 400

/*UpdateServiceAccountBadRequest Invalid input

swagger:response updateServiceAccountBadRequest
*/
type UpdateServiceAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateServiceAccountBadRequest creates UpdateServiceAccountBadRequest with default headers values
func NewUpdateServiceAccountBadRequest() *UpdateServiceAccountBadRequest {

	return &UpdateServiceAccountBadRequest{}
}

// WithPayload adds the payload to the update service account bad request response
func (o *UpdateServiceAccountBadRequest) WithPayload(payload *v1.Error) *UpdateServiceAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account bad request response
func (o *UpdateServiceAccountBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceAccountUnauthorizedCode is the HTTP code returned for type UpdateServiceAccountUnauthorized
const UpdateServiceAccountUnauthorizedCode int = 401

/*UpdateServiceAccountUnauthorized Unauthorized Request

swagger:response updateServiceAccountUnauthorized
*/
type UpdateServiceAccountUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateServiceAccountUnauthorized creates UpdateServiceAccountUnauthorized with default headers values
func NewUpdateServiceAccountUnauthorized() *UpdateServiceAccountUnauthorized {

	return &UpdateServiceAccountUnauthorized{}
}

// WithPayload adds the payload to the update service account unauthorized response
func (o *UpdateServiceAccountUnauthorized) WithPayload(payload *v1.Error) *UpdateServiceAccountUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account unauthorized response
func (o *UpdateServiceAccountUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceAccountForbiddenCode is the HTTP code returned for type UpdateServiceAccountForbidden
const UpdateServiceAccountForbiddenCode int = 403

/*UpdateServiceAccountForbidden access to this resource is forbidden

swagger:response updateServiceAccountForbidden
*/
type UpdateServiceAccountForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateServiceAccountForbidden creates UpdateServiceAccountForbidden with default headers values
func NewUpdateServiceAccountForbidden() *UpdateServiceAccountForbidden {

	return &UpdateServiceAccountForbidden{}
}

// WithPayload adds the payload to the update service account forbidden response
func (o *UpdateServiceAccountForbidden) WithPayload(payload *v1.Error) *UpdateServiceAccountForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account forbidden response
func (o *UpdateServiceAccountForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateServiceAccountNotFoundCode is the HTTP code returned for type UpdateServiceAccountNotFound
const UpdateServiceAccountNotFoundCode int = 404

/*UpdateServiceAccountNotFound Service Account not found

swagger:response updateServiceAccountNotFound
*/
type UpdateServiceAccountNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateServiceAccountNotFound creates UpdateServiceAccountNotFound with default headers values
func NewUpdateServiceAccountNotFound() *UpdateServiceAccountNotFound {

	return &UpdateServiceAccountNotFound{}
}

// WithPayload adds the payload to the update service account not found response
func (o *UpdateServiceAccountNotFound) WithPayload(payload *v1.Error) *UpdateServiceAccountNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account not found response
func (o *UpdateServiceAccountNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateServiceAccountDefault Unknown error

swagger:response updateServiceAccountDefault
*/
type UpdateServiceAccountDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateServiceAccountDefault creates UpdateServiceAccountDefault with default headers values
func NewUpdateServiceAccountDefault(code int) *UpdateServiceAccountDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateServiceAccountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update service account default response
func (o *UpdateServiceAccountDefault) WithStatusCode(code int) *UpdateServiceAccountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update service account default response
func (o *UpdateServiceAccountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update service account default response
func (o *UpdateServiceAccountDefault) WithPayload(payload *v1.Error) *UpdateServiceAccountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update service account default response
func (o *UpdateServiceAccountDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateServiceAccountDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
