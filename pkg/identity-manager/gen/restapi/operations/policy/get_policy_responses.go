///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetPolicyOKCode is the HTTP code returned for type GetPolicyOK
const GetPolicyOKCode int = 200

/*GetPolicyOK Successful operation

swagger:response getPolicyOK
*/
type GetPolicyOK struct {

	/*
	  In: Body
	*/
	Payload *v1.Policy `json:"body,omitempty"`
}

// NewGetPolicyOK creates GetPolicyOK with default headers values
func NewGetPolicyOK() *GetPolicyOK {

	return &GetPolicyOK{}
}

// WithPayload adds the payload to the get policy o k response
func (o *GetPolicyOK) WithPayload(payload *v1.Policy) *GetPolicyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy o k response
func (o *GetPolicyOK) SetPayload(payload *v1.Policy) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyBadRequestCode is the HTTP code returned for type GetPolicyBadRequest
const GetPolicyBadRequestCode int = 400

/*GetPolicyBadRequest Invalid Name supplied

swagger:response getPolicyBadRequest
*/
type GetPolicyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetPolicyBadRequest creates GetPolicyBadRequest with default headers values
func NewGetPolicyBadRequest() *GetPolicyBadRequest {

	return &GetPolicyBadRequest{}
}

// WithPayload adds the payload to the get policy bad request response
func (o *GetPolicyBadRequest) WithPayload(payload *v1.Error) *GetPolicyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy bad request response
func (o *GetPolicyBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyUnauthorizedCode is the HTTP code returned for type GetPolicyUnauthorized
const GetPolicyUnauthorizedCode int = 401

/*GetPolicyUnauthorized Unauthorized Request

swagger:response getPolicyUnauthorized
*/
type GetPolicyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetPolicyUnauthorized creates GetPolicyUnauthorized with default headers values
func NewGetPolicyUnauthorized() *GetPolicyUnauthorized {

	return &GetPolicyUnauthorized{}
}

// WithPayload adds the payload to the get policy unauthorized response
func (o *GetPolicyUnauthorized) WithPayload(payload *v1.Error) *GetPolicyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy unauthorized response
func (o *GetPolicyUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyForbiddenCode is the HTTP code returned for type GetPolicyForbidden
const GetPolicyForbiddenCode int = 403

/*GetPolicyForbidden access to this resource is forbidden

swagger:response getPolicyForbidden
*/
type GetPolicyForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetPolicyForbidden creates GetPolicyForbidden with default headers values
func NewGetPolicyForbidden() *GetPolicyForbidden {

	return &GetPolicyForbidden{}
}

// WithPayload adds the payload to the get policy forbidden response
func (o *GetPolicyForbidden) WithPayload(payload *v1.Error) *GetPolicyForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy forbidden response
func (o *GetPolicyForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyNotFoundCode is the HTTP code returned for type GetPolicyNotFound
const GetPolicyNotFoundCode int = 404

/*GetPolicyNotFound Policy not found

swagger:response getPolicyNotFound
*/
type GetPolicyNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetPolicyNotFound creates GetPolicyNotFound with default headers values
func NewGetPolicyNotFound() *GetPolicyNotFound {

	return &GetPolicyNotFound{}
}

// WithPayload adds the payload to the get policy not found response
func (o *GetPolicyNotFound) WithPayload(payload *v1.Error) *GetPolicyNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy not found response
func (o *GetPolicyNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetPolicyDefault Unknown error

swagger:response getPolicyDefault
*/
type GetPolicyDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetPolicyDefault creates GetPolicyDefault with default headers values
func NewGetPolicyDefault(code int) *GetPolicyDefault {
	if code <= 0 {
		code = 500
	}

	return &GetPolicyDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get policy default response
func (o *GetPolicyDefault) WithStatusCode(code int) *GetPolicyDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get policy default response
func (o *GetPolicyDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get policy default response
func (o *GetPolicyDefault) WithPayload(payload *v1.Error) *GetPolicyDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy default response
func (o *GetPolicyDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
