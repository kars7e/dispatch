///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package drivers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetDriverOKCode is the HTTP code returned for type GetDriverOK
const GetDriverOKCode int = 200

/*GetDriverOK Successful operation

swagger:response getDriverOK
*/
type GetDriverOK struct {

	/*
	  In: Body
	*/
	Payload *v1.EventDriver `json:"body,omitempty"`
}

// NewGetDriverOK creates GetDriverOK with default headers values
func NewGetDriverOK() *GetDriverOK {

	return &GetDriverOK{}
}

// WithPayload adds the payload to the get driver o k response
func (o *GetDriverOK) WithPayload(payload *v1.EventDriver) *GetDriverOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver o k response
func (o *GetDriverOK) SetPayload(payload *v1.EventDriver) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDriverBadRequestCode is the HTTP code returned for type GetDriverBadRequest
const GetDriverBadRequestCode int = 400

/*GetDriverBadRequest Invalid Name supplied

swagger:response getDriverBadRequest
*/
type GetDriverBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetDriverBadRequest creates GetDriverBadRequest with default headers values
func NewGetDriverBadRequest() *GetDriverBadRequest {

	return &GetDriverBadRequest{}
}

// WithPayload adds the payload to the get driver bad request response
func (o *GetDriverBadRequest) WithPayload(payload *v1.Error) *GetDriverBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver bad request response
func (o *GetDriverBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDriverUnauthorizedCode is the HTTP code returned for type GetDriverUnauthorized
const GetDriverUnauthorizedCode int = 401

/*GetDriverUnauthorized Unauthorized Request

swagger:response getDriverUnauthorized
*/
type GetDriverUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetDriverUnauthorized creates GetDriverUnauthorized with default headers values
func NewGetDriverUnauthorized() *GetDriverUnauthorized {

	return &GetDriverUnauthorized{}
}

// WithPayload adds the payload to the get driver unauthorized response
func (o *GetDriverUnauthorized) WithPayload(payload *v1.Error) *GetDriverUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver unauthorized response
func (o *GetDriverUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDriverForbiddenCode is the HTTP code returned for type GetDriverForbidden
const GetDriverForbiddenCode int = 403

/*GetDriverForbidden access to this resource is forbidden

swagger:response getDriverForbidden
*/
type GetDriverForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetDriverForbidden creates GetDriverForbidden with default headers values
func NewGetDriverForbidden() *GetDriverForbidden {

	return &GetDriverForbidden{}
}

// WithPayload adds the payload to the get driver forbidden response
func (o *GetDriverForbidden) WithPayload(payload *v1.Error) *GetDriverForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver forbidden response
func (o *GetDriverForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDriverNotFoundCode is the HTTP code returned for type GetDriverNotFound
const GetDriverNotFoundCode int = 404

/*GetDriverNotFound Driver not found

swagger:response getDriverNotFound
*/
type GetDriverNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetDriverNotFound creates GetDriverNotFound with default headers values
func NewGetDriverNotFound() *GetDriverNotFound {

	return &GetDriverNotFound{}
}

// WithPayload adds the payload to the get driver not found response
func (o *GetDriverNotFound) WithPayload(payload *v1.Error) *GetDriverNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver not found response
func (o *GetDriverNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetDriverDefault Unknown error

swagger:response getDriverDefault
*/
type GetDriverDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetDriverDefault creates GetDriverDefault with default headers values
func NewGetDriverDefault(code int) *GetDriverDefault {
	if code <= 0 {
		code = 500
	}

	return &GetDriverDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get driver default response
func (o *GetDriverDefault) WithStatusCode(code int) *GetDriverDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get driver default response
func (o *GetDriverDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get driver default response
func (o *GetDriverDefault) WithPayload(payload *v1.Error) *GetDriverDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get driver default response
func (o *GetDriverDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDriverDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
