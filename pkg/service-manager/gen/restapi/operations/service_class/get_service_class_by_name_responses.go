///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package service_class

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// GetServiceClassByNameOKCode is the HTTP code returned for type GetServiceClassByNameOK
const GetServiceClassByNameOKCode int = 200

/*GetServiceClassByNameOK successful operation

swagger:response getServiceClassByNameOK
*/
type GetServiceClassByNameOK struct {

	/*
	  In: Body
	*/
	Payload *v1.ServiceClass `json:"body,omitempty"`
}

// NewGetServiceClassByNameOK creates GetServiceClassByNameOK with default headers values
func NewGetServiceClassByNameOK() *GetServiceClassByNameOK {

	return &GetServiceClassByNameOK{}
}

// WithPayload adds the payload to the get service class by name o k response
func (o *GetServiceClassByNameOK) WithPayload(payload *v1.ServiceClass) *GetServiceClassByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name o k response
func (o *GetServiceClassByNameOK) SetPayload(payload *v1.ServiceClass) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceClassByNameBadRequestCode is the HTTP code returned for type GetServiceClassByNameBadRequest
const GetServiceClassByNameBadRequestCode int = 400

/*GetServiceClassByNameBadRequest Invalid name supplied

swagger:response getServiceClassByNameBadRequest
*/
type GetServiceClassByNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetServiceClassByNameBadRequest creates GetServiceClassByNameBadRequest with default headers values
func NewGetServiceClassByNameBadRequest() *GetServiceClassByNameBadRequest {

	return &GetServiceClassByNameBadRequest{}
}

// WithPayload adds the payload to the get service class by name bad request response
func (o *GetServiceClassByNameBadRequest) WithPayload(payload *v1.Error) *GetServiceClassByNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name bad request response
func (o *GetServiceClassByNameBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceClassByNameUnauthorizedCode is the HTTP code returned for type GetServiceClassByNameUnauthorized
const GetServiceClassByNameUnauthorizedCode int = 401

/*GetServiceClassByNameUnauthorized Unauthorized Request

swagger:response getServiceClassByNameUnauthorized
*/
type GetServiceClassByNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetServiceClassByNameUnauthorized creates GetServiceClassByNameUnauthorized with default headers values
func NewGetServiceClassByNameUnauthorized() *GetServiceClassByNameUnauthorized {

	return &GetServiceClassByNameUnauthorized{}
}

// WithPayload adds the payload to the get service class by name unauthorized response
func (o *GetServiceClassByNameUnauthorized) WithPayload(payload *v1.Error) *GetServiceClassByNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name unauthorized response
func (o *GetServiceClassByNameUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceClassByNameForbiddenCode is the HTTP code returned for type GetServiceClassByNameForbidden
const GetServiceClassByNameForbiddenCode int = 403

/*GetServiceClassByNameForbidden access to this resource is forbidden

swagger:response getServiceClassByNameForbidden
*/
type GetServiceClassByNameForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetServiceClassByNameForbidden creates GetServiceClassByNameForbidden with default headers values
func NewGetServiceClassByNameForbidden() *GetServiceClassByNameForbidden {

	return &GetServiceClassByNameForbidden{}
}

// WithPayload adds the payload to the get service class by name forbidden response
func (o *GetServiceClassByNameForbidden) WithPayload(payload *v1.Error) *GetServiceClassByNameForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name forbidden response
func (o *GetServiceClassByNameForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetServiceClassByNameNotFoundCode is the HTTP code returned for type GetServiceClassByNameNotFound
const GetServiceClassByNameNotFoundCode int = 404

/*GetServiceClassByNameNotFound Service class not found

swagger:response getServiceClassByNameNotFound
*/
type GetServiceClassByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetServiceClassByNameNotFound creates GetServiceClassByNameNotFound with default headers values
func NewGetServiceClassByNameNotFound() *GetServiceClassByNameNotFound {

	return &GetServiceClassByNameNotFound{}
}

// WithPayload adds the payload to the get service class by name not found response
func (o *GetServiceClassByNameNotFound) WithPayload(payload *v1.Error) *GetServiceClassByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name not found response
func (o *GetServiceClassByNameNotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetServiceClassByNameDefault Generic error response

swagger:response getServiceClassByNameDefault
*/
type GetServiceClassByNameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewGetServiceClassByNameDefault creates GetServiceClassByNameDefault with default headers values
func NewGetServiceClassByNameDefault(code int) *GetServiceClassByNameDefault {
	if code <= 0 {
		code = 500
	}

	return &GetServiceClassByNameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get service class by name default response
func (o *GetServiceClassByNameDefault) WithStatusCode(code int) *GetServiceClassByNameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get service class by name default response
func (o *GetServiceClassByNameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get service class by name default response
func (o *GetServiceClassByNameDefault) WithPayload(payload *v1.Error) *GetServiceClassByNameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get service class by name default response
func (o *GetServiceClassByNameDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetServiceClassByNameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
