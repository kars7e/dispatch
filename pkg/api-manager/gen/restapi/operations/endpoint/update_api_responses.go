///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// UpdateAPIOKCode is the HTTP code returned for type UpdateAPIOK
const UpdateAPIOKCode int = 200

/*UpdateAPIOK Successful update

swagger:response updateApiOK
*/
type UpdateAPIOK struct {

	/*
	  In: Body
	*/
	Payload *v1.API `json:"body,omitempty"`
}

// NewUpdateAPIOK creates UpdateAPIOK with default headers values
func NewUpdateAPIOK() *UpdateAPIOK {

	return &UpdateAPIOK{}
}

// WithPayload adds the payload to the update Api o k response
func (o *UpdateAPIOK) WithPayload(payload *v1.API) *UpdateAPIOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Api o k response
func (o *UpdateAPIOK) SetPayload(payload *v1.API) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPIOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAPIBadRequestCode is the HTTP code returned for type UpdateAPIBadRequest
const UpdateAPIBadRequestCode int = 400

/*UpdateAPIBadRequest Invalid input

swagger:response updateApiBadRequest
*/
type UpdateAPIBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAPIBadRequest creates UpdateAPIBadRequest with default headers values
func NewUpdateAPIBadRequest() *UpdateAPIBadRequest {

	return &UpdateAPIBadRequest{}
}

// WithPayload adds the payload to the update Api bad request response
func (o *UpdateAPIBadRequest) WithPayload(payload *v1.Error) *UpdateAPIBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Api bad request response
func (o *UpdateAPIBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPIBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAPIUnauthorizedCode is the HTTP code returned for type UpdateAPIUnauthorized
const UpdateAPIUnauthorizedCode int = 401

/*UpdateAPIUnauthorized Unauthorized Request

swagger:response updateApiUnauthorized
*/
type UpdateAPIUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAPIUnauthorized creates UpdateAPIUnauthorized with default headers values
func NewUpdateAPIUnauthorized() *UpdateAPIUnauthorized {

	return &UpdateAPIUnauthorized{}
}

// WithPayload adds the payload to the update Api unauthorized response
func (o *UpdateAPIUnauthorized) WithPayload(payload *v1.Error) *UpdateAPIUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Api unauthorized response
func (o *UpdateAPIUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPIUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAPIForbiddenCode is the HTTP code returned for type UpdateAPIForbidden
const UpdateAPIForbiddenCode int = 403

/*UpdateAPIForbidden access to this resource is forbidden

swagger:response updateApiForbidden
*/
type UpdateAPIForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAPIForbidden creates UpdateAPIForbidden with default headers values
func NewUpdateAPIForbidden() *UpdateAPIForbidden {

	return &UpdateAPIForbidden{}
}

// WithPayload adds the payload to the update Api forbidden response
func (o *UpdateAPIForbidden) WithPayload(payload *v1.Error) *UpdateAPIForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Api forbidden response
func (o *UpdateAPIForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPIForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateAPINotFoundCode is the HTTP code returned for type UpdateAPINotFound
const UpdateAPINotFoundCode int = 404

/*UpdateAPINotFound API not found

swagger:response updateApiNotFound
*/
type UpdateAPINotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAPINotFound creates UpdateAPINotFound with default headers values
func NewUpdateAPINotFound() *UpdateAPINotFound {

	return &UpdateAPINotFound{}
}

// WithPayload adds the payload to the update Api not found response
func (o *UpdateAPINotFound) WithPayload(payload *v1.Error) *UpdateAPINotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update Api not found response
func (o *UpdateAPINotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPINotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateAPIDefault Unknown error

swagger:response updateApiDefault
*/
type UpdateAPIDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewUpdateAPIDefault creates UpdateAPIDefault with default headers values
func NewUpdateAPIDefault(code int) *UpdateAPIDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateAPIDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update API default response
func (o *UpdateAPIDefault) WithStatusCode(code int) *UpdateAPIDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update API default response
func (o *UpdateAPIDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update API default response
func (o *UpdateAPIDefault) WithPayload(payload *v1.Error) *UpdateAPIDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update API default response
func (o *UpdateAPIDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateAPIDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
