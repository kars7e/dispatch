///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// AddAPIOKCode is the HTTP code returned for type AddAPIOK
const AddAPIOKCode int = 200

/*AddAPIOK API created

swagger:response addApiOK
*/
type AddAPIOK struct {

	/*
	  In: Body
	*/
	Payload *v1.API `json:"body,omitempty"`
}

// NewAddAPIOK creates AddAPIOK with default headers values
func NewAddAPIOK() *AddAPIOK {

	return &AddAPIOK{}
}

// WithPayload adds the payload to the add Api o k response
func (o *AddAPIOK) WithPayload(payload *v1.API) *AddAPIOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add Api o k response
func (o *AddAPIOK) SetPayload(payload *v1.API) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAPIBadRequestCode is the HTTP code returned for type AddAPIBadRequest
const AddAPIBadRequestCode int = 400

/*AddAPIBadRequest Invalid Input

swagger:response addApiBadRequest
*/
type AddAPIBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddAPIBadRequest creates AddAPIBadRequest with default headers values
func NewAddAPIBadRequest() *AddAPIBadRequest {

	return &AddAPIBadRequest{}
}

// WithPayload adds the payload to the add Api bad request response
func (o *AddAPIBadRequest) WithPayload(payload *v1.Error) *AddAPIBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add Api bad request response
func (o *AddAPIBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAPIUnauthorizedCode is the HTTP code returned for type AddAPIUnauthorized
const AddAPIUnauthorizedCode int = 401

/*AddAPIUnauthorized Unauthorized Request

swagger:response addApiUnauthorized
*/
type AddAPIUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddAPIUnauthorized creates AddAPIUnauthorized with default headers values
func NewAddAPIUnauthorized() *AddAPIUnauthorized {

	return &AddAPIUnauthorized{}
}

// WithPayload adds the payload to the add Api unauthorized response
func (o *AddAPIUnauthorized) WithPayload(payload *v1.Error) *AddAPIUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add Api unauthorized response
func (o *AddAPIUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAPIForbiddenCode is the HTTP code returned for type AddAPIForbidden
const AddAPIForbiddenCode int = 403

/*AddAPIForbidden access to this resource is forbidden

swagger:response addApiForbidden
*/
type AddAPIForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddAPIForbidden creates AddAPIForbidden with default headers values
func NewAddAPIForbidden() *AddAPIForbidden {

	return &AddAPIForbidden{}
}

// WithPayload adds the payload to the add Api forbidden response
func (o *AddAPIForbidden) WithPayload(payload *v1.Error) *AddAPIForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add Api forbidden response
func (o *AddAPIForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// AddAPIConflictCode is the HTTP code returned for type AddAPIConflict
const AddAPIConflictCode int = 409

/*AddAPIConflict Already Exists

swagger:response addApiConflict
*/
type AddAPIConflict struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddAPIConflict creates AddAPIConflict with default headers values
func NewAddAPIConflict() *AddAPIConflict {

	return &AddAPIConflict{}
}

// WithPayload adds the payload to the add Api conflict response
func (o *AddAPIConflict) WithPayload(payload *v1.Error) *AddAPIConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add Api conflict response
func (o *AddAPIConflict) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddAPIDefault Unknown error

swagger:response addApiDefault
*/
type AddAPIDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewAddAPIDefault creates AddAPIDefault with default headers values
func NewAddAPIDefault(code int) *AddAPIDefault {
	if code <= 0 {
		code = 500
	}

	return &AddAPIDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add API default response
func (o *AddAPIDefault) WithStatusCode(code int) *AddAPIDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add API default response
func (o *AddAPIDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add API default response
func (o *AddAPIDefault) WithPayload(payload *v1.Error) *AddAPIDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add API default response
func (o *AddAPIDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAPIDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
