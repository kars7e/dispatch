///////////////////////////////////////////////////////////////////////
// Copyright (c) 2017 VMware, Inc. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
///////////////////////////////////////////////////////////////////////

// Code generated by go-swagger; DO NOT EDIT.

package endpoint

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/vmware/dispatch/pkg/api/v1"
)

// DeleteAPIOKCode is the HTTP code returned for type DeleteAPIOK
const DeleteAPIOKCode int = 200

/*DeleteAPIOK Successful operation

swagger:response deleteApiOK
*/
type DeleteAPIOK struct {

	/*
	  In: Body
	*/
	Payload *v1.API `json:"body,omitempty"`
}

// NewDeleteAPIOK creates DeleteAPIOK with default headers values
func NewDeleteAPIOK() *DeleteAPIOK {

	return &DeleteAPIOK{}
}

// WithPayload adds the payload to the delete Api o k response
func (o *DeleteAPIOK) WithPayload(payload *v1.API) *DeleteAPIOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Api o k response
func (o *DeleteAPIOK) SetPayload(payload *v1.API) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPIOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAPIBadRequestCode is the HTTP code returned for type DeleteAPIBadRequest
const DeleteAPIBadRequestCode int = 400

/*DeleteAPIBadRequest Invalid Name supplied

swagger:response deleteApiBadRequest
*/
type DeleteAPIBadRequest struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteAPIBadRequest creates DeleteAPIBadRequest with default headers values
func NewDeleteAPIBadRequest() *DeleteAPIBadRequest {

	return &DeleteAPIBadRequest{}
}

// WithPayload adds the payload to the delete Api bad request response
func (o *DeleteAPIBadRequest) WithPayload(payload *v1.Error) *DeleteAPIBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Api bad request response
func (o *DeleteAPIBadRequest) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPIBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAPIUnauthorizedCode is the HTTP code returned for type DeleteAPIUnauthorized
const DeleteAPIUnauthorizedCode int = 401

/*DeleteAPIUnauthorized Unauthorized Request

swagger:response deleteApiUnauthorized
*/
type DeleteAPIUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteAPIUnauthorized creates DeleteAPIUnauthorized with default headers values
func NewDeleteAPIUnauthorized() *DeleteAPIUnauthorized {

	return &DeleteAPIUnauthorized{}
}

// WithPayload adds the payload to the delete Api unauthorized response
func (o *DeleteAPIUnauthorized) WithPayload(payload *v1.Error) *DeleteAPIUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Api unauthorized response
func (o *DeleteAPIUnauthorized) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPIUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAPIForbiddenCode is the HTTP code returned for type DeleteAPIForbidden
const DeleteAPIForbiddenCode int = 403

/*DeleteAPIForbidden access to this resource is forbidden

swagger:response deleteApiForbidden
*/
type DeleteAPIForbidden struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteAPIForbidden creates DeleteAPIForbidden with default headers values
func NewDeleteAPIForbidden() *DeleteAPIForbidden {

	return &DeleteAPIForbidden{}
}

// WithPayload adds the payload to the delete Api forbidden response
func (o *DeleteAPIForbidden) WithPayload(payload *v1.Error) *DeleteAPIForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Api forbidden response
func (o *DeleteAPIForbidden) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPIForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteAPINotFoundCode is the HTTP code returned for type DeleteAPINotFound
const DeleteAPINotFoundCode int = 404

/*DeleteAPINotFound API not found

swagger:response deleteApiNotFound
*/
type DeleteAPINotFound struct {

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteAPINotFound creates DeleteAPINotFound with default headers values
func NewDeleteAPINotFound() *DeleteAPINotFound {

	return &DeleteAPINotFound{}
}

// WithPayload adds the payload to the delete Api not found response
func (o *DeleteAPINotFound) WithPayload(payload *v1.Error) *DeleteAPINotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete Api not found response
func (o *DeleteAPINotFound) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPINotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteAPIDefault Unknown error

swagger:response deleteApiDefault
*/
type DeleteAPIDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *v1.Error `json:"body,omitempty"`
}

// NewDeleteAPIDefault creates DeleteAPIDefault with default headers values
func NewDeleteAPIDefault(code int) *DeleteAPIDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteAPIDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete API default response
func (o *DeleteAPIDefault) WithStatusCode(code int) *DeleteAPIDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete API default response
func (o *DeleteAPIDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete API default response
func (o *DeleteAPIDefault) WithPayload(payload *v1.Error) *DeleteAPIDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete API default response
func (o *DeleteAPIDefault) SetPayload(payload *v1.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteAPIDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
